@page "/"
@inject IOptions<Models.SmtpSettings> SmtpOptions
@using System.Globalization

<PageTitle>H Luxury Driving | VTC Strasbourg – Chauffeur Privé</PageTitle>

<div class="scroll-container">
    <!-- Masthead avec image de fond -->
    <header id="masthead" class="masthead position-relative" style="height: 100vh; color: white; overflow: hidden;">
        <!-- Couche de fond visible avant la vidéo -->
        <div class="video-background-fallback"></div>

        <!-- Vidéo pour desktop -->
        <video autoplay muted loop playsinline
               
               class="w-100 h-100 position-absolute top-0 start-0 d-none d-md-block fade-in-video"
               style="object-fit: cover; z-index: -1;">
            <source src="video/LuxuryTravelExperience.mp4" type="video/mp4" />
        </video>


        <!-- Image de fond pour mobile -->
        <div class="mobile-header-bg d-block d-md-none position-absolute top-0 start-0 w-100 h-100"
             style="background-image: url('img/h-luxury-car.jpg'); background-size: cover; background-position: center; z-index: -1;">
        </div>

        <!-- Overlay sombre -->
        <div class="video-overlay"></div>

        <div tabindex="0" style="z-index: 1; position: relative;" class="container h-100 d-flex align-items-center justify-content-center text-center">
            <div>
                <h1 class="masthead-heading text-uppercase">Voyagez avec élégance et sérénité</h1>
                <p class="masthead-subheading">
                    Découvrez H LUXURY DRIVING, votre partenaire de transport privé alliant confort, économie,
                    sécurité et flexibilité. Profitez d'un service de chauffeur personnalisé pour tous vos déplacements sur Strasbourg et sa région.
                </p>
                <button class="btn-reserve-yellow mt-3 text-uppercase btn-xl" @onclick="@(() => ScrollToSection("contact"))">
                    Je réserve mon trajet
                </button>

                <section class="tarif-carousel position-relative py-4">
                    <div class="container text-center">
                        <!-- Flèche gauche -->
                        <button class="carousel-btn left" onclick="handlePrevTarifClick()" aria-label="Précédent">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <polyline points="15 18 9 12 15 6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </button>

                        <div class="carousel">
                            <div class="carousel-track" id="tarifCarouselTrack">
                                <div class="tarif-box">
                                    Strasbourg Aéroport<br /><span>à partir de 39,99 €</span>
                                </div>
                                <div class="tarif-box">
                                    Gare de Strasbourg<br /><span>à partir de 19,99 €</span>
                                </div>
                                <div class="tarif-box">
                                    Aéroport de Baden-Baden<br /><span>à partir de 79,99 €</span>
                                </div>
                                <div class="tarif-box">
                                    Aéroport de Bâle-Mulhouse<br /><span>à partir de 149,99 €</span>
                                </div>
                                <div class="tarif-box">
                                    Aéroport de Francfort<br /><span>à partir de 249,99 €</span>
                                </div>
                            </div>
                        </div>

                        <!-- Flèche droite -->
                        <button class="carousel-btn right" onclick="handleNextTarifClick()" aria-label="Suivant">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <polyline points="9 6 15 12 9 18" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </button>
                    </div>
                </section>
            </div>
        </div>
    </header>

    <!-- Atouts -->
    <section tabindex="0" class="page-section" id="lots" style="padding-top: 80px;">
        <div class="container">
            <div class="text-center mb-5">
                <h2 class="section-heading text-uppercase" style="font-size: 2.5rem; font-weight: 700; letter-spacing: 1px;">
                    Pourquoi nous sortons du lot
                </h2>
                <div style="width: 60px; height: 4px; background-color: #FFD700; margin: 20px auto; border-radius: 2px;"></div>
            </div>

            <div class="row text-center">
                <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                    <div class="icon-circle mb-4">
                        <i class="fas fa-car-side fa-3x"></i>
                    </div>
                    <h4 class="my-3">Confort et Discrétion</h4>
                    <p class="text-muted">H LUXURY DRIVING vous garantit une expérience de voyage où le confort est roi. Nos véhicules sont sélectionnés pour leur luxe et leur commodité.</p>
                </div>
                <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                    <div class="icon-circle mb-4">
                        <i class="fas fa-piggy-bank fa-3x"></i>
                    </div>
                    <h4 class="my-3">Économie et Efficacité</h4>
                    <p class="text-muted">Nous combinons des tarifs compétitifs avec une gestion efficace pour vous offrir le meilleur rapport qualité-prix.</p>
                </div>
                <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                    <div class="icon-circle mb-4">
                        <i class="fas fa-shield-alt fa-3x"></i>
                    </div>
                    <h4 class="my-3">Sécurité et Flexibilité</h4>
                    <p class="text-muted">Votre sécurité est notre priorité. Nos chauffeurs professionnels sont formés pour garantir un voyage sécurisé et adapté à vos besoins.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Services -->
    <section tabindex="0" class="page-section bg-light" id="portfolio" style="padding-top: 80px;">
        <div class="container">
            <div class="text-center mb-5">
                <h2 class="section-heading text-uppercase" style="font-size: 2.5rem; font-weight: 700; letter-spacing: 1px;">
                    Services
                </h2>
                <div style="width: 60px; height: 4px; background-color: #FFD700; margin: 20px auto; border-radius: 2px;"></div>
            </div>

            <div class="row">
                @foreach (var service in Services)
                {
                    <div class="col-lg-4 col-sm-6 mb-4">
                        <div class="portfolio-item">
                            <a class="portfolio-link" href="#">
                                <div class="portfolio-hover"></div>
                                <div class="portfolio-image-container" style="height:250px;overflow:hidden;">
                                    <img src="@service.Image" class="img-fluid" style="width:100%;height:100%;object-fit:cover;" />
                                </div>
                            </a>
                            <div class="portfolio-caption">
                                <div class="portfolio-caption-heading" style="padding: 10px; font-weight: bold; text-align:center;">@service.Title</div>
                                <div class="portfolio-caption-subheading text-muted">
                                    @(new MarkupString(service.Description))
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Contact -->
    <section class="page-section" id="contact" style="padding-bottom: 10%">
        <div class="container">
            <div tabindex="0" class="text-center mb-5">
                <h2 class="section-heading text-uppercase" style="font-size: 2.5rem; font-weight: 700; letter-spacing: 1px;">
                    Formulaire de réservation
                </h2>
                <div style="width: 60px; height: 4px; background-color: #FFD700; margin: 20px auto; border-radius: 2px;"></div>
            </div>


            @using System.ComponentModel.DataAnnotations
            @inject IOptions<Models.SmtpSettings> SmtpOptions

            <EditForm EditContext="@editContext" OnValidSubmit="SendEmail">
                <DataAnnotationsValidator />
                @if (editContext.GetValidationMessages().Any())
                {
                    <div class="alert alert-danger border-2 rounded shadow-sm p-3 mb-4">
                        <strong><i class="fas fa-exclamation-triangle me-2"></i>Veuillez corriger les erreurs suivantes :</strong>
                        <ValidationSummary />
                    </div>
                }

                <div class="row mb-4">
                    <!-- Colonne gauche : Informations personnelles -->
                    <div class="col-md-6">
                        <div class="text-center mb-4">
                            <h5 tabindex="0" class="fw-bold px-4 py-2 contact-heading">
                                <span class="oi oi-envelope-closed" title="contact" aria-hidden="true"></span>
                                &nbsp;Informations de contact
                            </h5>
                        </div>

                        <InputText class="form-control mb-3" @bind-Value="reservation.Prenom" placeholder="Prénom *" />
                        @*                         <ValidationMessage For="@(() => reservation.Prenom)" /> *@

                        <InputText class="form-control mb-3" @bind-Value="reservation.Nom" placeholder="Nom *" />
                        @*                         <ValidationMessage For="@(() => reservation.Nom)" /> *@

                        <InputText class="form-control mb-3" @bind-Value="reservation.Email" placeholder="Email *" type="email" />
                        @*                         <ValidationMessage For="@(() => reservation.Email)" /> *@

                        <InputText class="form-control mb-3" @bind-Value="reservation.Telephone" placeholder="Téléphone *" type="tel" />
                        @* <ValidationMessage For="@(() => reservation.Telephone)" /> *@
                    </div>

                    <!-- Colonne droite : Détails de réservation -->
                    <div class="col-md-6">
                        <div class="text-center mb-4">
                            <h5 tabindex="0" class="fw-bold px-4 py-2 reservation-heading">
                                <span class="oi oi-calendar" title="réservation" aria-hidden="true"></span>
                                &nbsp;Détails de réservation
                            </h5>
                        </div>

                        <InputText class="form-control mb-3" @bind-Value="reservation.Depart" placeholder="Adresse de départ *" />
                        @* <ValidationMessage For="@(() => reservation.Depart)" /> *@

                        <InputText class="form-control mb-3" @bind-Value="reservation.Arrivee" placeholder="Adresse d'arrivée *" />
                        @* <ValidationMessage For="@(() => reservation.Arrivee)" /> *@

                        <div class="mb-3">
                            <label tabindex="0" class="form-label fw-bold">📅 Date de départ</label>
                            <InputDate class="form-control" @bind-Value="reservation.Date" />
                            @* <ValidationMessage For="@(() => reservation.Date)" /> *@
                        </div>

                        <div class="mb-3">
                            <label tabindex="0" class="form-label fw-bold">🕒 Heure de départ</label>
                            <InputText type="time" class="form-control"
                                       @bind-Value="reservation.Heure" />
                            @* <ValidationMessage For="@(() => reservation.Heure)" /> *@
                        </div>

                        <InputTextArea class="form-control mb-3" @bind-Value="reservation.Commentaire" placeholder="Commentaire (optionnel)" rows="4" />
                    </div>
                </div>

                <div tabindex="0" class="text-center">
                    <button class="btn-send-yellow text-uppercase btn-xl" type="submit">
                        Envoyer
                    </button>
                </div>

                @if (!string.IsNullOrEmpty(_status))
                {
                    <div class="alert alert-info mt-3">@_status</div>
                }
            </EditForm>

        </div>
    </section>

    <!-- Avis -->
    <section class="testimonial-carousel py-5" id="avis">
        <div class="container text-center position-relative">
            <h2 class="mb-4">Ce que nos clients disent</h2>
            <div style="width: 60px; height: 4px; background-color: #FFD700; margin: 20px auto 40px; border-radius: 2px;"></div>

            <!-- Flèche gauche -->
            <button class="carousel-btn left" onclick="handlePrevClick()" aria-label="Précédent">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <polyline points="15 18 9 12 15 6" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>

            <div class="carousel">
                <div class="carousel-track" id="carouselTrack">
                    @foreach (var(pseudo, texte, note, estVerifie, date) in testimonials)
                            {
                        <div class="testimonial">
                            <div class="stars">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (note >= i)
                                    {
                                        <span class="star full">★</span>
                                    }
                                    else if (note >= i - 0.5)
                                    {
                                        <span class="star half"><span class="half-inner">★</span></span>
                                    }
                                    else
                                    {
                                        <span class="star empty">★</span>
                                    }
                                }
                                <span class="note-text">@note.ToString("0.0")/5</span>
                            </div>
                            <p class="fw-bold mb-0" style="color: #555;">– @pseudo</p>
                            <p class="fst-italic mb-1">« @texte »</p>
                            <p class="testimonial-date">@date.ToString("MMMM yyyy", new CultureInfo("fr-FR"))</p>

                            @if (estVerifie)
                            {
                                <span class="badge badge-verified">✅ Avis vérifié</span>
                            }
                        </div>
                    }


                </div>
            </div>


            <!-- Flèche droite -->
            <button class="carousel-btn right" onclick="handleNextClick()" aria-label="Suivant">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <polyline points="9 6 15 12 9 18" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>

        </div>
    </section>
</div>


@code {
    @inject IJSRuntime JS

    private List<(string Prenom, string Texte, double Note, bool EstVerifie, DateTime Date)> testimonials = new()
    {
        ("Julie M.", "Service impeccable, chauffeur ponctuel et très professionnel.", 5, true, DateTime.Today.AddMonths(-4)),
        ("Antoine", "Une expérience de luxe du début à la fin. Je recommande vivement.", 5, true, DateTime.Today.AddMonths(-2)),
        ("Sophie T.", "Voiture très propre, conduite agréable, top !", 4, true, DateTime.Today.AddMonths(-3)),
        ("Marc L.", "J’ai utilisé leurs services pour un mariage, parfait.", 5, true, DateTime.Today.AddMonths(-5)),
        ("Clément", "Un vrai service haut de gamme à Strasbourg.", 4, true, DateTime.Today.AddMonths(-1)),
        ("Isabelle", "Merci pour votre gentillesse et professionnalisme !", 5, true, DateTime.Today.AddMonths(-6)),
        ("Léna", "Réservation facile et communication rapide. Bravo.", 4, true, DateTime.Today.AddMonths(-7)),
        ("David H.", "Super discret, très élégant, rien à redire.", 4, true, DateTime.Today.AddMonths(-9)),
        ("Yasmine", "Je referai appel à vous sans hésiter !", 4, true, DateTime.Today.AddMonths(-10)),
        ("Thomas G.", "Ponctualité, confort, luxe. Tout y est.", 5, true, DateTime.Today.AddMonths(-5))
    };

    private async Task ScrollToSection(string id)
    {
        await JS.InvokeVoidAsync("scrollToElement", id);
    }

    private List<ServiceItem> Services = new()
    {
        new ServiceItem
        {
            Title = "Transferts Standard, Gares & Aéroports",
            Description =
            @"<ul>
                <li><strong>Service de transfert haut de gamme</strong> depuis/vers aéroports et gares.</li>
                <li><strong>Chauffeurs professionnels</strong>, ponctuels et discrets.</li>
                <li><strong>Trajet confortable</strong> et sans stress, pour départ ou arrivée.</li>
                <li><strong>Véhicules de luxe</strong>, spacieux et sécurisés.</li>
                <li><strong>Connaissance parfaite des itinéraires</strong> pour une arrivée toujours à l’heure.</li>
                <li><strong>Flexibilité totale</strong>, même pour les changements de dernière minute.</li>
                <li>Idéal pour les voyageurs exigeants en quête de <strong>sérénité</strong> et d’<strong>excellence</strong>.</li>
            </ul>",
            Image = "img/frankfurtAirport.jpg"
        },
        new ServiceItem
        {
            Title = "Service et Chauffeur à la Demande",
            Description =
            @"<ul>
                <li><strong>Chauffeur privé disponible à la demande</strong>, selon vos horaires.</li>
                <li>Parfait pour les <strong>rendez-vous professionnels</strong>, événements ou déplacements en ville.</li>
                <li>Service alliant <strong>élégance</strong>, <strong>discrétion</strong> et <strong>professionnalisme</strong>.</li>
                <li><strong>Véhicules haut de gamme</strong> pour un confort optimal.</li>
                <li><strong>Adaptabilité totale</strong>, pour quelques heures ou la journée entière.</li>
                <li><strong>Chauffeurs expérimentés</strong>, attentifs à votre sécurité et à vos besoins.</li>
            </ul>",
            Image = "img/serviceEtChauffeur.jpg"
        },
        new ServiceItem
        {
            Title = "Excursions et Visites Guidées",
            Description =
            @"<ul>
                <li>Découvrez les <strong>trésors locaux</strong> dans un confort absolu.</li>
                <li><strong>Itinéraires sur mesure</strong>, selon vos envies et centres d’intérêt.</li>
                <li><strong>Chauffeurs-guides passionnés</strong> pour des commentaires enrichissants.</li>
                <li><strong>Liberté totale</strong> pour faire des pauses aux points d’intérêt.</li>
                <li><strong>Véhicules spacieux et élégants</strong>, adaptés aux longues excursions.</li>
                <li><strong>Expérience unique</strong>, alliant découverte culturelle et raffinement.</li>
            </ul>",
            Image = "img/petiteFrance.jpg"
        }
    };

    public class ServiceItem
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
    }

    private string? _status;

    private ReservationModel reservation = new();

    private async Task SendEmail()
    {
        var smtpSettings = SmtpOptions.Value;

        try
        {
            using var smtp = new SmtpClient(smtpSettings.Host, smtpSettings.Port)
            {
                EnableSsl = smtpSettings.EnableSsl,
                Credentials = new NetworkCredential(smtpSettings.Username, smtpSettings.Password)
            };

            var commentaireHtml = reservation.Commentaire?
                .Replace("\r\n", "\n")
                .Replace("\r", "\n")
                .Replace("\n", "<br />");

            #region Mail to owner
            var messageBodyToOwner = $@"
                <p>Bonjour Hilyess,</p>

                <p>Vous avez une nouvelle demande de réservation :</p>

                <div style='border: 1px solid #ccc; padding: 15px; border-radius: 6px; background-color: #f9f9f9;'>
                    <strong>🙋🏻‍♂️ Prénom & Nom :</strong> {reservation.Prenom} {reservation.Nom?.ToUpper()}<br>
                    <strong>📧 Email :</strong> {reservation.Email}<br>
                    <strong>📞 Téléphone :</strong> {reservation.Telephone}<br>
                    <hr>
                    <strong>📍 Adresse de départ :</strong> {reservation.Depart}<br>
                    <strong>🚩 Adresse d'arrivée :</strong> {reservation.Arrivee}<br>
                    <strong>🗓️ Date du trajet :</strong> {reservation.Date:dd/MM/yyyy}<br>
                    <strong>🕒 Heure de départ :</strong> {reservation.Heure?.Substring(0, 5)}<br>
                    <strong>🗒️ Commentaire :</strong><br>
                        <div style='border-left: 4px solid #FFD700; background-color: #f9f9f9; padding: 10px; margin: 10px 0; font-style: italic;''>
                            {commentaireHtml}
                        </div>
                </div>

                <p>Cordialement,</p>

                <p><strong>H LUXURY DRIVING</strong><br />
                <a href='https://www.h-luxury-driving.com' target='_blank' style='color: #FFD700; text-decoration: none;'>www.h-luxury-driving.com</a></p>";

            var mailToOwner = new MailMessage(smtpSettings.Username, "contact@h-luxury-driving.com")
            {
                Subject = $@"Nouvelle demande de réservation de {reservation.Prenom} {reservation.Nom?.ToUpper()}",
                IsBodyHtml = true,
                Body = messageBodyToOwner
            };
            await smtp.SendMailAsync(mailToOwner);
            #endregion

            #region Mail to customer
            // 2. Email envoyé à l'utilisateur
            var messageBodyToCustomer = $@"
                <p>Bonjour {reservation.Prenom},</p>

                <p>Merci pour votre demande de réservation !</p>

                <div style='border: 1px solid #ccc; padding: 15px; border-radius: 6px; background-color: #f9f9f9;'>
                    Voici les détails de votre réservation :<br><br>
                    <strong>🙋🏻‍♂️ Prénom & Nom :</strong> {reservation.Prenom} {reservation.Nom?.ToUpper()}<br>
                    <strong>📧 Email :</strong> {reservation.Email}<br>
                    <strong>📞 Téléphone :</strong> {reservation.Telephone}<br>
                    <hr>
                    <strong>📍 Adresse de départ :</strong> {reservation.Depart}<br>
                    <strong>🚩 Adresse d'arrivée :</strong> {reservation.Arrivee}<br>
                    <strong>🗓️ Date du trajet :</strong> {reservation.Date:dd/MM/yyyy}<br>
                    <strong>🕒 Heure de départ :</strong> {reservation.Heure?.Substring(0, 5)}<br>
                    <strong>🗒️ Commentaire :</strong><br>
                        <div style='border-left: 4px solid #FFD700; background-color: #f9f9f9; padding: 10px; margin: 10px 0; font-style: italic;''>
                            {commentaireHtml}
                        </div>
                </div>

                <p>Votre chauffeur vous contactera pour confirmer votre réservation.</p>
                <p>En cas de besoin, vous pouvez nous contacter par téléphone ou via WhatsApp : +33 6 15 24 37 87</p>

                <p>Cordialement,</p>

                <p><strong>H LUXURY DRIVING</strong><br />
                <a href='https://www.h-luxury-driving.com' target='_blank' style='color: #FFD700; text-decoration: none;'>www.h-luxury-driving.com</a></p>";
            ;


            var mailToCustomer = new MailMessage(smtpSettings.Username, reservation.Email)
            {
                Subject = "[H LUXURY DRIVING] Votre réservation a bien été envoyée !",
                IsBodyHtml = true,
                Body = messageBodyToCustomer
            };
            await smtp.SendMailAsync(mailToCustomer);
            #endregion

            _status = "Votre réservation a bien été envoyée ! Merci.";
            ClearForm();
        }
        catch (Exception ex)
        {
            _status = $"Erreur lors de l'envoi : {ex.Message}";
        }
    }

    private void ClearForm()
    {
        reservation.Prenom = reservation.Nom = reservation.Email = reservation.Telephone = reservation.Depart = reservation.Arrivee = reservation.Commentaire = reservation.Heure = null;
        reservation.Date = null;
    }

    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(reservation);

        // Mélange les témoignages à chaque chargement
        var rng = new Random();
        testimonials = testimonials.OrderBy(_ => rng.Next()).ToList();
    }
}
