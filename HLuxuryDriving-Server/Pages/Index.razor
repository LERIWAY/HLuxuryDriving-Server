@page "/"

@inject IOptions<Models.SmtpSettings> SmtpOptions


<h3>Envoyer un email</h3>

<input class="form-control mb-2" @bind="_destinataire" placeholder="Email du destinataire" />
<textarea class="form-control mb-2" @bind="_message" placeholder="Message à envoyer"></textarea>
<button class="btn btn-primary" @onclick="SendEmail">Envoyer</button>

@if (!string.IsNullOrWhiteSpace(_status))
{
    <div class="alert alert-info">@_status</div>
}

@code {
    private string? _destinataire;
    private string? _message;
    private string? _status;

    private async Task SendEmail()
    {
        var smtpSettings = SmtpOptions.Value;

        try
        {
            var smtp = new SmtpClient(smtpSettings.Host, smtpSettings.Port)
                {
                    EnableSsl = smtpSettings.EnableSsl,
                    Credentials = new NetworkCredential(smtpSettings.Username, smtpSettings.Password)
                };

            if (!string.IsNullOrEmpty(_destinataire))
            {

                var mail = new MailMessage(smtpSettings.Username, _destinataire)
                    {
                        Subject = "Test Gmail",
                        Body = _message
                    };
                await smtp.SendMailAsync(mail);
            }

            _status = "Email envoyé avec succès.";
        }
        catch (Exception ex)
        {
            _status = $"Erreur : {ex.Message}";
        }
    }
}
