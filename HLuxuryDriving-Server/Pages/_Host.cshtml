@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace HLuxuryDriving_Server.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <meta name="description" content="Réservez votre VTC à Strasbourg avec H Luxury Driving. Chauffeur privé haut de gamme, transferts aéroports, événements et déplacements professionnels." />
    <link href="css/site.css" rel="stylesheet" />
    <link href="HLuxuryDriving-Server.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="/img/car_logo.png" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
@*     <title>H Luxury Driving | VTC Strasbourg – Chauffeur Privé Haut de Gamme</title>
 *@    <meta name="keywords" content="VTC Strasbourg, chauffeur privé Strasbourg, transfert aéroport Strasbourg, VTC Haut de gamme, H Luxury Driving" />
    <meta name="author" content="H Luxury Driving" />
    <link rel="canonical" href="https://www.h-luxury-driving.com/" />
    <!-- Open Graph (pour les partages réseaux sociaux) -->
    <meta property="og:title" content="VTC Strasbourg – Chauffeur Privé | H Luxury Driving" />
    <meta property="og:description" content="Service VTC haut de gamme à Strasbourg pour vos déplacements privés et professionnels." />
    <meta property="og:image" content="https://www.h-luxury-driving.com/img/car_logo.png" />
    <meta property="og:url" content="https://www.h-luxury-driving.com/" />
    <meta property="og:type" content="website" />
</head>

<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        window.scrollToElement = (id) => {
            const el = document.getElementById(id);
            if (el) {
                el.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        };
    </script>

    <script>
        window.addEventListener('scroll', function () {
            const navbar = document.getElementById('mainNavbar');
             // Si écran trop petit (mobile), ne rien faire
             if (window.innerWidth <= 768) return;

            if (window.scrollY > 50) {
                navbar.classList.add('shrink');
            } else {
                navbar.classList.remove('shrink');
            }
        });

                const video = document.querySelector('video');
        video.muted = true;
        video.play().catch(() => {
          // Si la lecture automatique est bloquée, on peut afficher l'image fallback ou un message
          video.style.display = 'none';
          document.querySelector('.video-overlay').style.display = 'block'; // ou afficher une image
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const video = document.getElementById('bg-video');
            if (video) {
                video.addEventListener('playing', () => {
                    video.style.opacity = '1';
                });
            }
        });
    </script>

    <script>
        let index = 0;
        let interval;
        let autoScrollActive = true;

        function showSlide(i) {
            const track = document.getElementById("carouselTrack");
            const testimonials = track.children;
            if (!track || testimonials.length === 0) return;

            index = (i + testimonials.length) % testimonials.length;

            const slideWidth = testimonials[0].offsetWidth + 32; // 2rem gap
            const offset = -index * slideWidth;

            track.style.transform = `translateX(${offset}px)`;
        }

        function nextSlide() {
            showSlide(index + 1);
        }

        function prevSlide() {
            showSlide(index - 1);
        }

        function stopAutoScroll() {
            if (autoScrollActive) {
                clearInterval(interval);
                autoScrollActive = false;
            }
        }

        function handleNextClick() {
            stopAutoScroll();
            nextSlide();
        }

        function handlePrevClick() {
            stopAutoScroll();
            prevSlide();
        }

        window.addEventListener("load", () => {
            showSlide(0);
            interval = setInterval(() => {
                if (autoScrollActive) {
                    nextSlide();
                }
            }, 4000);
        });
    </script>



</body>
</html>
